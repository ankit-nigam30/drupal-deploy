<?php

/**
 * Implementation of hook_ctools_plugin_type().
 */
function deploy_ctools_plugin_type() {
  return array(
    'endpoints' => array(
      'cache' => TRUE,
      'use hooks' => TRUE,
      'classes' => array('handler'),
    ),
    'providers' => array(
      'cache' => TRUE,
      'use hooks' => TRUE,
      'classes' => array('handler'),
    ),
    'processors' => array(
      'cache' => TRUE,
      'use hooks' => TRUE,
      'classes' => array('handler'),
    ),
  );
}

/**
 * Implementation of hook_deploy_processors().
 */
function deploy_deploy_processors() {
  $path = drupal_get_path('module', 'deploy') . '/plugins';
  return array(
    'DeployProcessorQueue' => array(
      'name' => 'Queue API processor',
      'description' => 'Adds all resources for deployment to the Queue API. Works best with larger deployments where deployment speed is not critical.',
      'handler' => array(
        'class' => 'DeployProcessorQueue',
        'file' => 'DeployProcessorQueue.inc',
        'path' => $path,
      ),
    ),
    'DeployProcessorMemory' => array(
      'name' => 'Memory processor',
      'description' => 'A simple processor that deploys all resources to all endpoints in memory. Works best when triggered from Drush.',
      'handler' => array(
        'class' => 'DeployProcessorMemory',
        'file' => 'DeployProcessorMemory.inc',
        'path' => $path,
      ),
    ),
  );
}

/**
 * Get all provider plugins.
 */
function deploy_get_providers() {
  ctools_include('plugins');
  return ctools_get_plugins('deploy', 'providers');
}

/**
 * Get a provider plugin.
 */
function deploy_get_provider($name) {
  ctools_include('plugins');
  return ctools_get_plugins('deploy', 'providers', $name);
}

/**
 * Get all processor plugins.
 */
function deploy_get_processors() {
  ctools_include('plugins');
  return ctools_get_plugins('deploy', 'processors');
}

/**
 * Get a processor plugin.
 */
function deploy_get_processor($name) {
  ctools_include('plugins');
  return ctools_get_plugins('deploy', 'processors', $name);
}

/**
 * Object factory for a deployment plan.
 */
function deploy_plan_create($schema, $data) {
  $config = array();
  $provider = new $data->provider($config);
  $processor = new $data->processor($provider);

  $plan = new DeployPlan($processor);
  foreach ($data as $key => $value) {
    $plan->{$key} = $value;
  }

  return $plan;
}

/**
 * Loader callback for a deployment plan.
 */
function deploy_plan_load($name) {
  ctools_include('export');
  $result = ctools_export_load_object('deploy_plans', 'names', array($name));
  if (isset($result[$name])) {
    return $result[$name];
  }
}

/**
 * Object factory for a deployment endpoint.
 */
function deploy_endpoint_create($schema, $data) {

}

/**
 * Loader callback for a deployment endpoint.
 */
function deploy_endpoint_load($name) {

}
