<?php
/**
 * @file
 * Contains install and update functions for Deploy.
 */

/**
 * Implementation of hook_schema().
 */
function deploy_manager_schema() {
  $schema['deploy_plan_items'] = array(
    'description' => t('Detailed information about individual deployment plan items.'),
    'fields' => array(
      'iid' => array(
        'description' => t('The unique identifier for this deployment plan item.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'plan' => array(
        'description' => t('The deployment plan this item applies to (foreign key to {deploy_plan}).'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'entity_type' => array(
        'description' => t('The type of entity, e.g. "node", "user".'),
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => t('A description of this individual item for use in logging and plan listings.'),
        'type' => 'varchar',
        'length' => 75,
        'not null' => TRUE,
      ),
      'weight' => array(
        'description' => t('The weight of this item, used to control which items get deployed first.'),
        'type' => 'int',
        'unsigned' => FALSE,
        'default' => 0,
      ),
      'eid' => array(
        'description' => t('The data which is actually deployed to the remote server'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => t('The id of the user who added this item to the deployment plan (foreign key to {user}).'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'ts' => array(
        'description' => t('The unix timestamp indicating when this item was added to the deployment plan.'),
        'type' => 'int',
        'not null' => TRUE,
      ),
      'weight_group' => array(
        'description' => t('Weight of this group of items (nodes, comments, etc.)'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('iid'),
  );
  return $schema;
}

/**
 * Implementation of hook_uninstall().
 */
function deploy_manager_uninstall() {

  // Delete all the deploy variables and then clear the variable cache
  db_query("DELETE FROM {variable} WHERE name LIKE 'deploy_manager_%'");
  cache_clear_all('variables', 'cache');
}