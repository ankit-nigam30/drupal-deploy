<?php

/**
 * Implementation of hook_schema().
 *
 * @todo
 *   Add indexes.
 */
function deploy_schema() {
  $schema = array();

  $schema['deploy_plans'] = array(
    'description' => 'Base table holding deployment plans.',
    'export' => array(
      'api' => array(
        'owner' => 'deploy',
        'api' => 'deploy_plans',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
      'key' => 'name',
      'key name' => 'Name',
      'primary key' => 'pid',
      'identifier' => 'plan',
      'object factory' => 'deploy_plan_create',
      'load callback' => 'deploy_plan_load',
      'default hook' => 'deploy_plans_default',
    ),
    'fields' => array(
      'pid' => array(
        'description' => 'Serial id for this plan. Only used for internal lookups.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'no export' => TRUE,
      ),
      'name' => array(
        'description' => 'Machine-readable name for this plan.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'Administrative title for this plan.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => 'Administrative description for this plan.',
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
      'provider' => array(
        'description' => 'Provider used for this plan.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'processor' => array(
        'description' => 'Processor used for this plan.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'config' => array(
        'description' => 'Serialized configuration data this plan.',
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('pid', 'name'),
  );

  $schema['deploy_endpoints'] = array(
    'description' => 'Base table holding deployment endpoints.',
    'export' => array(
      'api' => array(
        'owner' => 'deploy',
        'api' => 'deploy_endpoints',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
      'key' => 'name',
      'key name' => 'Name',
      'primary key' => 'eid',
      'identifier' => 'endpoint',
      'object factory' => 'deploy_endpoint_create',
      'load callback' => 'deploy_endpoint_load',
      'default hook' => 'deploy_endpoints_default',
    ),
    'fields' => array(
      'eid' => array(
        'description' => 'Serial id for this endpoint instance. Only used for internal lookups.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'no export' => TRUE,
      ),
      'name' => array(
        'description' => 'Machine-readable name for this endpoint instance.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'Administrative title for this endpoint instance.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => 'Administrative description for this endpoint instance.',
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
      'endpoint' => array(
        'description' => 'Endpoint class used for this endpoint instance.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'config' => array(
        'description' => 'Serialized configuration data this endpoint instance.',
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('eid', 'name'),
  );

  return $schema;
}
